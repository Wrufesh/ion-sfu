// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/proto/sfu/sfu.proto

package sfu

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	media "github.com/pion/ion-sfu/pkg/proto/media"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublishRequest struct {
	Rid                  string              `protobuf:"bytes,1,opt,name=rid,proto3" json:"rid,omitempty"`
	Options              *PublishOptions     `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	Description          *SessionDescription `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{0}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *PublishRequest) GetOptions() *PublishOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *PublishRequest) GetDescription() *SessionDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

type PublishReply struct {
	Mediainfo            *media.Info         `protobuf:"bytes,1,opt,name=mediainfo,proto3" json:"mediainfo,omitempty"`
	Description          *SessionDescription `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Stream               *media.Stream       `protobuf:"bytes,3,opt,name=stream,proto3" json:"stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PublishReply) Reset()         { *m = PublishReply{} }
func (m *PublishReply) String() string { return proto.CompactTextString(m) }
func (*PublishReply) ProtoMessage()    {}
func (*PublishReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{1}
}

func (m *PublishReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishReply.Unmarshal(m, b)
}
func (m *PublishReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishReply.Marshal(b, m, deterministic)
}
func (m *PublishReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishReply.Merge(m, src)
}
func (m *PublishReply) XXX_Size() int {
	return xxx_messageInfo_PublishReply.Size(m)
}
func (m *PublishReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishReply.DiscardUnknown(m)
}

var xxx_messageInfo_PublishReply proto.InternalMessageInfo

func (m *PublishReply) GetMediainfo() *media.Info {
	if m != nil {
		return m.Mediainfo
	}
	return nil
}

func (m *PublishReply) GetDescription() *SessionDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *PublishReply) GetStream() *media.Stream {
	if m != nil {
		return m.Stream
	}
	return nil
}

type UnpublishRequest struct {
	Mid                  string   `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnpublishRequest) Reset()         { *m = UnpublishRequest{} }
func (m *UnpublishRequest) String() string { return proto.CompactTextString(m) }
func (*UnpublishRequest) ProtoMessage()    {}
func (*UnpublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{2}
}

func (m *UnpublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnpublishRequest.Unmarshal(m, b)
}
func (m *UnpublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnpublishRequest.Marshal(b, m, deterministic)
}
func (m *UnpublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnpublishRequest.Merge(m, src)
}
func (m *UnpublishRequest) XXX_Size() int {
	return xxx_messageInfo_UnpublishRequest.Size(m)
}
func (m *UnpublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnpublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnpublishRequest proto.InternalMessageInfo

func (m *UnpublishRequest) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

type UnpublishReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnpublishReply) Reset()         { *m = UnpublishReply{} }
func (m *UnpublishReply) String() string { return proto.CompactTextString(m) }
func (*UnpublishReply) ProtoMessage()    {}
func (*UnpublishReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{3}
}

func (m *UnpublishReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnpublishReply.Unmarshal(m, b)
}
func (m *UnpublishReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnpublishReply.Marshal(b, m, deterministic)
}
func (m *UnpublishReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnpublishReply.Merge(m, src)
}
func (m *UnpublishReply) XXX_Size() int {
	return xxx_messageInfo_UnpublishReply.Size(m)
}
func (m *UnpublishReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UnpublishReply.DiscardUnknown(m)
}

var xxx_messageInfo_UnpublishReply proto.InternalMessageInfo

type SubscribeRequest struct {
	Mid                  string              `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Description          *SessionDescription `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Options              *SubscribeOptions   `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{4}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *SubscribeRequest) GetDescription() *SessionDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *SubscribeRequest) GetOptions() *SubscribeOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type SubscribeReply struct {
	Mid                  string              `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Description          *SessionDescription `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeReply) Reset()         { *m = SubscribeReply{} }
func (m *SubscribeReply) String() string { return proto.CompactTextString(m) }
func (*SubscribeReply) ProtoMessage()    {}
func (*SubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{5}
}

func (m *SubscribeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReply.Unmarshal(m, b)
}
func (m *SubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReply.Marshal(b, m, deterministic)
}
func (m *SubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReply.Merge(m, src)
}
func (m *SubscribeReply) XXX_Size() int {
	return xxx_messageInfo_SubscribeReply.Size(m)
}
func (m *SubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReply proto.InternalMessageInfo

func (m *SubscribeReply) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *SubscribeReply) GetDescription() *SessionDescription {
	if m != nil {
		return m.Description
	}
	return nil
}

type UnsubscribeRequest struct {
	Mid                  string   `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeRequest) Reset()         { *m = UnsubscribeRequest{} }
func (m *UnsubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeRequest) ProtoMessage()    {}
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{6}
}

func (m *UnsubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeRequest.Unmarshal(m, b)
}
func (m *UnsubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeRequest.Marshal(b, m, deterministic)
}
func (m *UnsubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeRequest.Merge(m, src)
}
func (m *UnsubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeRequest.Size(m)
}
func (m *UnsubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeRequest proto.InternalMessageInfo

func (m *UnsubscribeRequest) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

type UnsubscribeReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeReply) Reset()         { *m = UnsubscribeReply{} }
func (m *UnsubscribeReply) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeReply) ProtoMessage()    {}
func (*UnsubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{7}
}

func (m *UnsubscribeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeReply.Unmarshal(m, b)
}
func (m *UnsubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeReply.Marshal(b, m, deterministic)
}
func (m *UnsubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeReply.Merge(m, src)
}
func (m *UnsubscribeReply) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeReply.Size(m)
}
func (m *UnsubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeReply proto.InternalMessageInfo

type SessionDescription struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Sdp                  string   `protobuf:"bytes,2,opt,name=sdp,proto3" json:"sdp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionDescription) Reset()         { *m = SessionDescription{} }
func (m *SessionDescription) String() string { return proto.CompactTextString(m) }
func (*SessionDescription) ProtoMessage()    {}
func (*SessionDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{8}
}

func (m *SessionDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionDescription.Unmarshal(m, b)
}
func (m *SessionDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionDescription.Marshal(b, m, deterministic)
}
func (m *SessionDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionDescription.Merge(m, src)
}
func (m *SessionDescription) XXX_Size() int {
	return xxx_messageInfo_SessionDescription.Size(m)
}
func (m *SessionDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionDescription.DiscardUnknown(m)
}

var xxx_messageInfo_SessionDescription proto.InternalMessageInfo

func (m *SessionDescription) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SessionDescription) GetSdp() string {
	if m != nil {
		return m.Sdp
	}
	return ""
}

type PublishOptions struct {
	Codec                string   `protobuf:"bytes,1,opt,name=codec,proto3" json:"codec,omitempty"`
	Bandwidth            uint32   `protobuf:"varint,2,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Transportcc          bool     `protobuf:"varint,3,opt,name=transportcc,proto3" json:"transportcc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishOptions) Reset()         { *m = PublishOptions{} }
func (m *PublishOptions) String() string { return proto.CompactTextString(m) }
func (*PublishOptions) ProtoMessage()    {}
func (*PublishOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{9}
}

func (m *PublishOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishOptions.Unmarshal(m, b)
}
func (m *PublishOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishOptions.Marshal(b, m, deterministic)
}
func (m *PublishOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishOptions.Merge(m, src)
}
func (m *PublishOptions) XXX_Size() int {
	return xxx_messageInfo_PublishOptions.Size(m)
}
func (m *PublishOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishOptions.DiscardUnknown(m)
}

var xxx_messageInfo_PublishOptions proto.InternalMessageInfo

func (m *PublishOptions) GetCodec() string {
	if m != nil {
		return m.Codec
	}
	return ""
}

func (m *PublishOptions) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *PublishOptions) GetTransportcc() bool {
	if m != nil {
		return m.Transportcc
	}
	return false
}

type SubscribeOptions struct {
	Bandwidth            uint32   `protobuf:"varint,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Transportcc          bool     `protobuf:"varint,2,opt,name=transportcc,proto3" json:"transportcc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeOptions) Reset()         { *m = SubscribeOptions{} }
func (m *SubscribeOptions) String() string { return proto.CompactTextString(m) }
func (*SubscribeOptions) ProtoMessage()    {}
func (*SubscribeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_5eb21164dad2fe34, []int{10}
}

func (m *SubscribeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeOptions.Unmarshal(m, b)
}
func (m *SubscribeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeOptions.Marshal(b, m, deterministic)
}
func (m *SubscribeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeOptions.Merge(m, src)
}
func (m *SubscribeOptions) XXX_Size() int {
	return xxx_messageInfo_SubscribeOptions.Size(m)
}
func (m *SubscribeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeOptions proto.InternalMessageInfo

func (m *SubscribeOptions) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *SubscribeOptions) GetTransportcc() bool {
	if m != nil {
		return m.Transportcc
	}
	return false
}

func init() {
	proto.RegisterType((*PublishRequest)(nil), "sfu.PublishRequest")
	proto.RegisterType((*PublishReply)(nil), "sfu.PublishReply")
	proto.RegisterType((*UnpublishRequest)(nil), "sfu.UnpublishRequest")
	proto.RegisterType((*UnpublishReply)(nil), "sfu.UnpublishReply")
	proto.RegisterType((*SubscribeRequest)(nil), "sfu.SubscribeRequest")
	proto.RegisterType((*SubscribeReply)(nil), "sfu.SubscribeReply")
	proto.RegisterType((*UnsubscribeRequest)(nil), "sfu.UnsubscribeRequest")
	proto.RegisterType((*UnsubscribeReply)(nil), "sfu.UnsubscribeReply")
	proto.RegisterType((*SessionDescription)(nil), "sfu.SessionDescription")
	proto.RegisterType((*PublishOptions)(nil), "sfu.PublishOptions")
	proto.RegisterType((*SubscribeOptions)(nil), "sfu.SubscribeOptions")
}

func init() { proto.RegisterFile("pkg/proto/sfu/sfu.proto", fileDescriptor_5eb21164dad2fe34) }

var fileDescriptor_5eb21164dad2fe34 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x4d, 0x8b, 0x13, 0x4d,
	0x10, 0xde, 0x49, 0xde, 0x77, 0xd7, 0xa9, 0x71, 0x43, 0xac, 0x75, 0x49, 0x88, 0x1e, 0x42, 0xe3,
	0xea, 0x7a, 0xd8, 0x8c, 0x44, 0x3c, 0xac, 0x17, 0x41, 0x44, 0xf0, 0xa4, 0x74, 0xc8, 0x45, 0xf0,
	0x90, 0xf9, 0xda, 0x34, 0x66, 0xba, 0xdb, 0xe9, 0x1e, 0x24, 0xff, 0xc1, 0x83, 0x77, 0x7f, 0xa6,
	0x7f, 0x40, 0xba, 0xa7, 0x93, 0xf9, 0x08, 0xb2, 0x82, 0x1e, 0x12, 0xba, 0xab, 0xea, 0xa9, 0xe7,
	0xa9, 0x8f, 0x69, 0x18, 0xc9, 0xcf, 0x37, 0xa1, 0x2c, 0x84, 0x16, 0xa1, 0xca, 0x4a, 0xf3, 0x9b,
	0xd9, 0x1b, 0xf6, 0x55, 0x56, 0x4e, 0x1e, 0xd4, 0xde, 0x3c, 0x4d, 0xd8, 0xaa, 0xfa, 0xaf, 0x22,
	0xc8, 0x37, 0x0f, 0x06, 0x1f, 0xca, 0x68, 0xc3, 0xd4, 0x9a, 0xa6, 0x5f, 0xca, 0x54, 0x69, 0x1c,
	0x42, 0xbf, 0x60, 0xc9, 0xd8, 0x9b, 0x7a, 0x97, 0x3e, 0x35, 0x47, 0xbc, 0x82, 0x13, 0x21, 0x35,
	0x13, 0x5c, 0x8d, 0x7b, 0x53, 0xef, 0x32, 0x98, 0x9f, 0xcd, 0x0c, 0x87, 0xc3, 0xbd, 0xaf, 0x5c,
	0x74, 0x17, 0x83, 0xd7, 0x10, 0x24, 0xa9, 0x8a, 0x0b, 0x66, 0xef, 0xe3, 0xbe, 0x85, 0x8c, 0x2c,
	0x64, 0x91, 0x2a, 0xc5, 0x04, 0x7f, 0x53, 0xbb, 0x69, 0x33, 0x96, 0xfc, 0xf0, 0xe0, 0xee, 0x5e,
	0x8e, 0xdc, 0x6c, 0xf1, 0x29, 0xf8, 0x56, 0x2e, 0xe3, 0x99, 0xb0, 0x92, 0x82, 0x79, 0x30, 0xab,
	0x0a, 0x78, 0xc7, 0x33, 0x41, 0x6b, 0x6f, 0x97, 0xb6, 0xf7, 0xe7, 0xb4, 0x78, 0x01, 0xc7, 0x4a,
	0x17, 0xe9, 0x2a, 0x77, 0x62, 0x4f, 0x1d, 0xc5, 0xc2, 0x1a, 0xa9, 0x73, 0x92, 0x47, 0x30, 0x5c,
	0x72, 0x79, 0xd0, 0xad, 0xbc, 0xee, 0x56, 0xce, 0x12, 0x32, 0x84, 0x41, 0x23, 0x4a, 0x6e, 0xb6,
	0xe4, 0xbb, 0x07, 0xc3, 0x45, 0x19, 0x19, 0xbe, 0x28, 0xfd, 0x2d, 0xf0, 0x6f, 0x0a, 0x08, 0xeb,
	0x09, 0x55, 0x15, 0x9c, 0x57, 0xb0, 0x1d, 0x69, 0x77, 0x46, 0xe4, 0x13, 0x0c, 0x1a, 0x8a, 0x4c,
	0xa7, 0xff, 0xa5, 0x1e, 0xf2, 0x18, 0x70, 0xc9, 0xd5, 0xad, 0x25, 0x13, 0x34, 0x1d, 0x55, 0x2d,
	0x21, 0xe4, 0x25, 0xe0, 0x61, 0x7a, 0x44, 0xf8, 0x4f, 0x6f, 0x65, 0xea, 0xc0, 0xf6, 0x6c, 0xf2,
	0xa9, 0x44, 0x5a, 0x61, 0x3e, 0x35, 0x47, 0x92, 0xed, 0xb7, 0xd9, 0x55, 0x8c, 0xf7, 0xe1, 0xff,
	0x58, 0x24, 0x69, 0xec, 0x80, 0xd5, 0x05, 0x1f, 0x82, 0x1f, 0xad, 0x78, 0xf2, 0x95, 0x25, 0x7a,
	0x6d, 0xf1, 0xa7, 0xb4, 0x36, 0xe0, 0x14, 0x02, 0x5d, 0xac, 0xb8, 0x92, 0xa2, 0xd0, 0x71, 0x6c,
	0x3b, 0x7a, 0x87, 0x36, 0x4d, 0x84, 0x36, 0x06, 0xba, 0x63, 0x6a, 0xe5, 0xf4, 0x6e, 0xc9, 0xd9,
	0x3b, 0xc8, 0x39, 0xff, 0xe9, 0x41, 0x7f, 0xf1, 0x76, 0x89, 0x2f, 0xe0, 0xc4, 0xd5, 0x80, 0xad,
	0xef, 0xcc, 0x75, 0x71, 0x72, 0xaf, 0x6d, 0x34, 0x2d, 0x3b, 0x7a, 0xe6, 0xe1, 0x35, 0xf8, 0xfb,
	0xb5, 0xc3, 0x6a, 0xfc, 0xdd, 0x65, 0x9d, 0x9c, 0x75, 0xcd, 0x16, 0x6c, 0xa0, 0xfb, 0x6a, 0xb0,
	0xb3, 0x39, 0x6d, 0x68, 0x7b, 0x67, 0xc8, 0x11, 0xbe, 0x82, 0xa0, 0x31, 0x40, 0x1c, 0x39, 0x82,
	0xee, 0xe8, 0x27, 0xe7, 0x87, 0x0e, 0x9b, 0xe0, 0xf5, 0x93, 0x8f, 0x17, 0x37, 0x4c, 0xaf, 0xcb,
	0x68, 0x16, 0x8b, 0x3c, 0x94, 0x4c, 0xf0, 0x90, 0x09, 0x7e, 0x65, 0xde, 0xb1, 0xd6, 0xab, 0x16,
	0x1d, 0xdb, 0xe3, 0xf3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x8d, 0xd4, 0x08, 0xed, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SFUClient is the client API for SFU service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SFUClient interface {
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (SFU_PublishClient, error)
	Unpublish(ctx context.Context, in *UnpublishRequest, opts ...grpc.CallOption) (*UnpublishReply, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*UnsubscribeReply, error)
}

type sFUClient struct {
	cc *grpc.ClientConn
}

func NewSFUClient(cc *grpc.ClientConn) SFUClient {
	return &sFUClient{cc}
}

func (c *sFUClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (SFU_PublishClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SFU_serviceDesc.Streams[0], "/sfu.SFU/Publish", opts...)
	if err != nil {
		return nil, err
	}
	x := &sFUPublishClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SFU_PublishClient interface {
	Recv() (*PublishReply, error)
	grpc.ClientStream
}

type sFUPublishClient struct {
	grpc.ClientStream
}

func (x *sFUPublishClient) Recv() (*PublishReply, error) {
	m := new(PublishReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *sFUClient) Unpublish(ctx context.Context, in *UnpublishRequest, opts ...grpc.CallOption) (*UnpublishReply, error) {
	out := new(UnpublishReply)
	err := c.cc.Invoke(ctx, "/sfu.SFU/Unpublish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sFUClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error) {
	out := new(SubscribeReply)
	err := c.cc.Invoke(ctx, "/sfu.SFU/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sFUClient) Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*UnsubscribeReply, error) {
	out := new(UnsubscribeReply)
	err := c.cc.Invoke(ctx, "/sfu.SFU/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SFUServer is the server API for SFU service.
type SFUServer interface {
	Publish(*PublishRequest, SFU_PublishServer) error
	Unpublish(context.Context, *UnpublishRequest) (*UnpublishReply, error)
	Subscribe(context.Context, *SubscribeRequest) (*SubscribeReply, error)
	Unsubscribe(context.Context, *UnsubscribeRequest) (*UnsubscribeReply, error)
}

// UnimplementedSFUServer can be embedded to have forward compatible implementations.
type UnimplementedSFUServer struct {
}

func (*UnimplementedSFUServer) Publish(req *PublishRequest, srv SFU_PublishServer) error {
	return status.Errorf(codes.Unimplemented, "method Publish not implemented")
}
func (*UnimplementedSFUServer) Unpublish(ctx context.Context, req *UnpublishRequest) (*UnpublishReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unpublish not implemented")
}
func (*UnimplementedSFUServer) Subscribe(ctx context.Context, req *SubscribeRequest) (*SubscribeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedSFUServer) Unsubscribe(ctx context.Context, req *UnsubscribeRequest) (*UnsubscribeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}

func RegisterSFUServer(s *grpc.Server, srv SFUServer) {
	s.RegisterService(&_SFU_serviceDesc, srv)
}

func _SFU_Publish_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PublishRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SFUServer).Publish(m, &sFUPublishServer{stream})
}

type SFU_PublishServer interface {
	Send(*PublishReply) error
	grpc.ServerStream
}

type sFUPublishServer struct {
	grpc.ServerStream
}

func (x *sFUPublishServer) Send(m *PublishReply) error {
	return x.ServerStream.SendMsg(m)
}

func _SFU_Unpublish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnpublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SFUServer).Unpublish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sfu.SFU/Unpublish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SFUServer).Unpublish(ctx, req.(*UnpublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SFU_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SFUServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sfu.SFU/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SFUServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SFU_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SFUServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sfu.SFU/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SFUServer).Unsubscribe(ctx, req.(*UnsubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SFU_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sfu.SFU",
	HandlerType: (*SFUServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Unpublish",
			Handler:    _SFU_Unpublish_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _SFU_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _SFU_Unsubscribe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Publish",
			Handler:       _SFU_Publish_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/proto/sfu/sfu.proto",
}
